# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: quote_generator

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
  # every day
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: git pull origin master

      # Golang
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Set up environment
        env:
          PORT: ${{ secrets.PORT }}
          URL: ${{ secrets.URL }}
        run: |
          echo "PORT=$PORT" >> .env
          echo "URL=$URL" >> .env

      - name: Build and Test
        run: |
          go build -v ./...
          go test -v ./...

      - name: Run
        run: |
          go get "github.com/goccy/go-json"
          go get "github.com/joho/godotenv"
          go run ./main.go

      - name: Update README.md
        run: |
          git config --global user.email "kietnguyen17052001@gmail.com"
          git config --global user.name "ngdangkiet"
          timestamp=$(TZ=Asia/Ho_Chi_Minh date +"%Y-%m-%d %H:%M:%S %Z")
          git add .
          git commit -m "Updated README.md at $timestamp" || echo "No changes to commit"
          git push

      # Docker
      # 1)
      #      - name: Login to Dockerhub
      #        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      #        with:
      #          username: ${{ secrets.DOCKER_USERNAME }}
      #          password: ${{ secrets.DOCKER_PASSWD }}
      #
      #      - name: Extract metadata (tags, labels) for Docker
      #        id: meta
      #        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      #        with:
      #          images: 01092002/ngdangkiet-golang
      #
      #      - name: Build and push Docker image
      #        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #        with:
      #          context: .
      #          file: ./Dockerfile
      #          push: true
      #          tags: ${{ steps.meta.outputs.tags }}
      #          labels: ${{ steps.meta.outputs.labels }}

      # Docker
      # 2)
      - name: Extract branch name
        id: extract_branch
        run: echo "::set-output name=branch::$(echo $GITHUB_REF | sed 's/refs\/heads\///')"

      - name: Extract commit hash
        id: extract_commit
        run: echo "::set-output name=commit::$(git rev-parse --short HEAD)"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        run: |
          # Extract the branch name and commit hash
          DATE=$(date +'%Y%m%d%H%M%S')
          BRANCH_NAME=${{ steps.extract_branch.outputs.branch }}
          COMMIT_HASH=${{ steps.extract_commit.outputs.commit }}
          IMAGE_NAME="01092002/ngdangkiet-golang:latest"
          IMAGE_TAG="$IMAGE_NAME-$BRANCH_NAME-$COMMIT_HASH-$DATE"
          
          # Build the Docker image
          docker build -t $IMAGE_NAME .
          
          # Tag the image with the branch name and commit hash
          docker tag $IMAGE_NAME $IMAGE_TAG
          
          # Log in to Docker Hub
          echo $DOCKER_PASSWD | docker login -u $DOCKER_USERNAME --password-stdin
          
          # Push the images to Docker Hub
          docker push $IMAGE_NAME
          docker push $IMAGE_TAG
        env:
          DOCKER_USERNAME: ${{ secrets.$DOCKER_USERNAME }}
          DOCKER_PASSWD: ${{ secrets.$DOCKER_PASSWD }}
